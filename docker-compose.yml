version: '3'

services:
  pgdb:
    image: postgres
    environment:
      - POSTGRES_DB=maxburger
      - POSTGRES_USER=max
      - POSTGRES_PASSWORD=Anykey
    container_name: pgdb
    volumes:
      - .:/var/lib/postgresql/data1
    ports:
      - '5432:5432'

  backend:
    build: .
    command: >
      /bin/sh -c "python3 manage.py makemigrations --force-color --no-input -v 3
      && python3 manage.py migrate --force-color -v 3
      && python3 manage.py collectstatic --noinput
      && python3 -m gunicorn -b 0.0.0.0:8080 star_burger.wsgi --reload"
    environment:
      SECRET_KEY: django-insecure-0if40nf4nf93n4
      DJANGO_SUPERUSER_USERNAME: admin
      DJANGO_SUPERUSER_PASSWORD: admin
      DJANGO_SUPERUSER_EMAIL: admin@example.com
      YANDEX_API_KEY: 485691e3-142b-45cf-83d2-7ffbf02a8adc
      ALLOWED_HOSTS: 80.249.146.108,127.0.0.1:8080,127.0.0.1,localhost,starburger
      DEBUG: 'False'
      ROLLBAR: 'False'
      DEV: 'False'
      USER: 'max'
      ROLLBAR_ACCESS_TOKEN: 521c8a98a373486699086b0beb34e485
      POSTGRES_URL: postgres://max:Anykey@pgdb:5432/maxburger
    expose:
      - 8080
    depends_on:
      - pgdb
      - nginx
    links:
      - nginx
    volumes:
      - collected_burger:/app/collected_static

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./hosts:/etc/nginx/conf.d
      - ./media:/burger/mediafiles
      - collected_burger:/burger/collected_static
    restart:
      always

volumes:
  collected_burger:
