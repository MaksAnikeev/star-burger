# Generated by Django 4.1.3 on 2022-12-11 18:50
import requests
from environs import Env

env = Env()
env.read_env()

yandex_api_key = env('YANDEX_API_KEY')
from django.db import migrations

def fetch_coordinates(apikey, address):
    base_url = "https://geocode-maps.yandex.ru/1.x"
    response = requests.get(base_url, params={
        "geocode": address,
        "apikey": apikey,
        "format": "json",
    })
    response.raise_for_status()
    found_places = response.json()['response']['GeoObjectCollection']['featureMember']

    if not found_places:
        return None

    most_relevant = found_places[0]
    lng, lat = most_relevant['GeoObject']['Point']['pos'].split(" ")
    return lng, lat

def create_coordinate(apps, schema_editor):
    Order = apps.get_model('foodcartapp', 'Order')
    Coordinate = apps.get_model('foodcartapp', 'Coordinate')
    for order in Order.objects.all().iterator():
        address = order.address
        try:
            lng, lat = fetch_coordinates(
                apikey=yandex_api_key,
                address=address)

            Coordinate.objects.get_or_create(
                address=address,
                lng=lng,
                lat=lat
            )
        except:
            pass

class Migration(migrations.Migration):

    dependencies = [
        ('foodcartapp', '0052_alter_coordinate_options_alter_coordinate_table'),
    ]

    operations = [migrations.RunPython(create_coordinate)
    ]
